/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    //id("org.jetbrains.kotlin.jvm", "1.2.71")

    application
    
}

repositories {
    // Use JCenter for resolving dependencies.
    mavenCentral()
    //jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")

    implementation("org.slf4j:slf4j-api:1.7.30")
    implementation("org.apache.commons:commons-lang3:3.11")
    implementation("org.jgrapht:jgrapht-core:1.5.0")
    implementation("org.jgrapht:jgrapht-ext:1.5.0")
    
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

    testRuntimeOnly("ch.qos.logback:logback-classic:1.2.3")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
  //  api("org.apache.commons:commons-math3:3.6.1")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
//    implementation("com.google.guava:guava:29.0-jre")
}

tasks.test {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
